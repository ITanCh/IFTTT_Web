后台（带方框的是后期可以考虑添加的）：
servelet: register
	request: <form>用户名、密码、确认密码、[验证码]</form>
	response:成功/失败
	
servelet: login
	request：<form>用户名、密码、[验证码]</form>
	response：成功、SetCookies/失败
	
/* Task  相关*/
servelet: gettasks（可前台直接调用方法）
	request：[页码]、Cookies
	response：任务总数（若使用页码则不需要），每一个任务的信息
	
servelet: addtask（可用表单方式提交）
	request：要新建的任务信息、Cookies
	response:成功/失败
	
servelet: edittask（可用表单方式提交）
	request：任务ID、修改后的任务信息、Cookies
	response:成功/失败
	
servelet: deltask（可用表单方式提交）
	request：任务ID、Cookies
	response：成功/失败
	
/* RunningTask  相关*/	
servelet: getrunningtasks（可前台直接调用方法）
	request：[页码]、Cookies
	response：正在运行的任务总数（若使用页码则不需要），每一个任务的信息
	
servelet: starttask（可用表单方式提交）
	request：要开始的任务ID、Cookies
	response:成功/失败
	
servelet: pausetask（可用表单方式提交）
	request：要暂停的任务ID、Cookies
	response:成功/失败
	
servelet: stoptask（可用表单方式提交）
	request：要停止的任务ID、Cookies
	response：成功/失败
	
/* 短消息  相关*/
servelet: sendpm
	request：目标用户ID(可改成用户名)、Cookies
	response:成功/失败
	
servelet: getpm
	request：[页码]、Cookies
	response：短消息总数（若使用页码则不需要），每一个短消息的内容

/* 微博授权  相关*/
[servelet: getcode]（若自动登录授权的功能不可用）
	授权登陆之后自动跳转到诸如 http://Domain/servelet: getcode?code=XXXXXXX的页面，因为有Cookies，所以能根据Cookies对应用户、时间存储起来。

[servelet: getaccesstoken]（若自动登录授权的功能不可用）
	request：Cookies
	response：最近一次该用户获取的AccessToken
	前台在打开一个授权登陆的页面之后，向getaccesstoken发送请求，直到获取AccessToken。而getaccesstoken直到查询到一个时间接近的该用户accesstoken再返回值。

	
/*任务类开始*/
ob.Task

任务（类）extends Thread：（但这个Thread不运行）
TASKID 任务标识(不可修改)
TaskName 任务名

ThisType This的类型0为定时，1为收邮件
若ThisType = 0
	ThisDate 定时所用的时间
若ThisType = 1
	ThisEmail This所用的收邮件的邮箱地址（可扩展Email类，或者直接账号密码）

ThatType That的类型0为发邮件，1为发微博
若ThatType = 0
	ThatSrcEmail That所用的发邮件的邮箱（可扩展Email类，或者直接账号密码）
	UseThisEmail（若ThisType = 1且UseThisEmail = true，则ThatSrcEmail直接使用收邮件的邮箱，也就是ThisEmail）
	ThatDstEmail That所需要发送的目标邮箱地址
	ThatEmailTitle 发送邮件标题
	ThatText 发送邮件/微博内容
若ThatType = 1
	ThatWeiboUserName 微博登录用户名（若基于HTMLParser的自动登录授权的功能仍可用）
	ThatWeiboPassWord 微博登陆密码（若基于HTMLParser的自动登录授权的功能仍可用）（只能添加修改，不能获取）
	[ThatWeiboAccessToken] 微博授权AccessToken（若自动登录授权的功能不可用）
	ThatWeiboText	微博内容

/*任务类结束*/


/*Email类开始*/
ob.Email

自动判断Email的POP3、SMTP地址、端口毕竟不一定正确，可考虑扩展一个Email类：
Address 邮箱地址
PassWord 邮箱密码
Type 主机类型： 0为POP3，1为SMTP 
UseSSL 是否使用SSL
Host POP3或者SMTP的主机地址 如果未填写则使用默认主机（POP3默认主机pop.domain SMTP默认主机smtp.domain）
Port 端口 如果未填写则使用默认端口（POP默认端口:110(不使用SSL)、995(SSL)；SMTP默认端口：25(不使用SSL)、465(SSL) ）

/*Email类结束*/

/*正在运行类开始*/	
ob.RunningTask

正在运行的任务（类）extends 任务（类）：（Thread可以运行）
isPaused 是否被用户手动暂停
TaskLog 任务运行的日志

（值得说的是，正在运行的任务的内容与任务内容是独立的，开始一个任务相当于提交一份作业，本地修改对其不会生效。只有停止任务，也就是从正在运行的任务中去除，再重新开始，修改才会生效。但是如果尝试开始已经开始过的任务，则会提示失败，这是为了防止一个任务被多次运行可能产生的错误）

（为了让用户方便查看日志，任务自动停止后不会自动消失，必须手动执行停止任务才会消失。判断任务是否是自动停止的方法：isAlive() == false && getisPaused() == false）

/*正在运行类结束*/	


servelet: gettasks（可前台直接调用方法）
若直接在前台用JAVA调用方法，则可用ob.Taskmanager.getTasks(),返回一个ArrayList<Task>。
servelet: getrunningtasks（可前台直接调用方法）
若直接在前台用JAVA调用方法，则可用ob.Taskmanager.getRunningTasks(),返回一个ArrayList<RunningTask>。
